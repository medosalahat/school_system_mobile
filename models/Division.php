<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "division".
 *
 * @property int $id
 * @property string $title
 * @property int $classroom_id
 * @property int $max_number_student
 * @property int $min_number_student
 * @property int $created_at
 * @property int $updated_at
 *
 * @property CoursesDivision[] $coursesDivisions
 * @property Classroom $classroom
 */
class Division extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'division';
    }
    public function beforeValidate()
    { $this->created_at = time();
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public function beforeSave($insert)
    {

        $this->created_at = time();

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
        ];
    }

    public function custom_function_validation($attribute){
        if($this->$attribute<$this->min_number_student)
        // add custom validation
        $this->addError('min_number_student','Must be less than '.$this->$attribute);
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'classroom_id', 'max_number_student', 'min_number_student', 'created_at'], 'required'],
            [['classroom_id', 'max_number_student', 'min_number_student', 'created_at', 'updated_at'], 'integer'],
            ['max_number_student','custom_function_validation'],
            [['title'], 'string', 'max' => 100],

            [['classroom_id'], 'exist', 'skipOnError' => true, 'targetClass' => Classroom::className(), 'targetAttribute' => ['classroom_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'title' => Yii::t('app', 'Title'),
            'classroom_id' => Yii::t('app', 'Classroom ID'),
            'max_number_student' => Yii::t('app', 'Max Number Student'),
            'min_number_student' => Yii::t('app', 'Min Number Student'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCoursesDivisions()
    {
        return $this->hasMany(CoursesDivision::className(), ['division_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getClassroom()
    {
        return $this->hasOne(Classroom::className(), ['id' => 'classroom_id']);
    }

    /**
     * @inheritdoc
     * @return DivisionQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new DivisionQuery(get_called_class());
    }
}
