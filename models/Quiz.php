<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "quiz".
 *
 * @property int $id
 * @property string $title
 * @property int $courses_division_id
 * @property int $min_pass
 * @property int $max_pass
 * @property int $created_at
 * @property int $updated_at
 *
 * @property CoursesDivision $coursesDivision
 * @property QuizQuestions[] $quizQuestions
 */
class Quiz extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'quiz';
    }
    public function beforeValidate()
    { $this->created_at = time();
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public function custom_function_validation($attribute){
        if($this->$attribute<$this->min_pass)
            // add custom validation
            $this->addError('min_pass','Must be less than '.$this->$attribute);
    }
    public function beforeSave($insert)
    {

        $this->created_at = time();

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'courses_division_id', 'min_pass', 'max_pass', 'created_at'], 'required'],
            [['courses_division_id', 'min_pass', 'max_pass', 'created_at', 'updated_at'], 'integer'],
            ['max_pass','custom_function_validation'],
            [['courses_division_id'], 'exist', 'skipOnError' => true, 'targetClass' => CoursesDivision::className(), 'targetAttribute' => ['courses_division_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'title' => Yii::t('app', 'Title'),
            'courses_division_id' => Yii::t('app', 'Courses Division ID'),
            'min_pass' => Yii::t('app', 'Min Pass'),
            'max_pass' => Yii::t('app', 'Max Pass'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCoursesDivision()
    {
        return $this->hasOne(CoursesDivision::className(), ['id' => 'courses_division_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getQuizQuestions()
    {
        return $this->hasMany(QuizQuestions::className(), ['quiz_id' => 'id']);
    }

    /**
     * @inheritdoc
     * @return QuizQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new QuizQuery(get_called_class());
    }
}
